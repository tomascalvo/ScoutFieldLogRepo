@model StartUpCompanies
@*Title*@
@if (Model.Status == "Lead")
{
    ViewBag.Title = "Edit Lead";
    <h2>Edit Lead</h2>
}
else
{
    ViewBag.Title = "Edit Startup";
    <h2>Edit Startup</h2>
}
@if (ViewBag.Message != null)
{
     <p>@ViewBag.Message</p>
}
@if (Model.Image != null)
{
    <img src="@Model.Image" alt="Company Logo" width="500" />
}
<h3>@Model.CompanyName</h3>
<button onclick="cancelUpdatePage()">Cancel Updates</button>
<button onclick="submitUpdateForm()">Save</button>
<form name="updateCompany" action="/Home/EditCompany" onsubmit="submitUpdateForm();return false;" method="POST">
    @*Input StartUpCompany.Id*@
    @Html.HiddenFor(model => model.Id)
    <table class="table">
        @*Contact Info*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.CompanyName)
            </td>
            <td>
                <input type="text" id="CompanyName" name="CompanyName" placeholder="@Model.CompanyName" value="@Model.CompanyName" />

            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.CompanyWebsite)
            </td>
            <td>
                <input type="text" id="CompanyWebsite" name="CompanyWebsite" placeholder="@Model.CompanyWebsite" value="@Model.CompanyWebsite" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.CompanyContactName)
            </td>
            <td>
                <input type="text" id="CompanyContactName" name="CompanyContactName" placeholder="@Model.CompanyContactName" value="@Model.CompanyContactName" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.CompanyContactPhoneNumber)
            </td>
            <td>
                <input type="number" id="CompanyContactPhoneNumber" name="CompanyContactPhoneNumber" placeholder="@Model.CompanyContactPhoneNumber" value="@Model.CompanyContactPhoneNumber" />
            </td>
        </tr>
        @*Location*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.City)
            </td>
            <td>
                <input type="text" id="City" name="City" placeholder="@Model.City" value="@Model.City" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.StateProvince)
            </td>
            <td>
                <input type="text" id="StateProvince" name="StateProvince" placeholder="@Model.StateProvince" value="@Model.StateProvince" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Country)
            </td>
            <td>
                <input type="text" id="Country" name="Country" placeholder="@Model.Country" value="@Model.Country" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.TwoLineSummary)
            </td>
            <td>
                <textarea rows=3 cols=50 name="TwoLineSummary" maxlength=250, placeholder="@Model.TwoLineSummary" value="@Model.TwoLineSummary" wrap="hard">@Model.TwoLineSummary</textarea>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Image)
            </td>
            <td>
                <textarea rows=3 cols=50 name="Image" id="Image" maxlength=500, placeholder="@Model.Image" value="@Model.Image" wrap="hard">@Model.Image</textarea>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Raised)
            </td>
            <td>
                <input type="text" id="Raised" name="Raised" placeholder="@Model.Raised" value="@Model.Raised" />
            </td>
        </tr>
        @*Origin Info*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.ScoutName)
            </td>
            <td>
                <input type="text" id="ScoutName" name="ScoutName" value="@Model.ScoutName" placeholder="@Model.ScoutName" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.DateAssigned)
            </td>
            <td>
                @if (@Model.DateAssigned != null)
                {
                    <input type="text" id="DateAssigned" name="DateAssigned" placeholder='@Model.DateAssigned.Value.ToString("MM/dd/yyyy")' value='@Model.DateAssigned.Value.ToString("MM/dd/yyyy")' onfocus="(this.type='date')" onblur="(this.type='text')"/>
                }
                else
                {
                    <input type="date" id="DateAssigned" name="DateAssigned" />
                }
            </td>
        </tr>
        @*Evaluation Info*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Status)
            </td>
            <td>
                <input type="radio" id="Lead" name="Status" value="Lead" checked />
                <label for="Lead">Lead</label>
                <br />
                <input type="radio" id="UnderConsideration" name="Status" value="UnderConsideration" />
                <label for="Startup">Under Consideration</label>
                <br />
                <input type="radio" id="Reviewed" name="Status" value="Reviewed" />
                <label for="Startup">Reviewed</label>
                <br />
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.DateReviewed)
            </td>
            <td>
                @if (@Model.DateReviewed != null)
                {
                    <input type="text" id="DateReviewed" name="DateReviewed" placeholder='@Model.DateReviewed.Value.ToString("MM/dd/yyyy")' value='@Model.DateReviewed.Value.ToString("MM/dd/yyyy")' onfocus="(this.type='date')" onblur="(this.type='text')"/>
                }
                else
                {
                    <input type="date" id="DateReviewed" name="DateReviewed" />
                }
            </td>
        </tr>
        @*Checkbox Inputs: Alignments*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Alignments)
            </td>
            <td>
                @{
                    string[] partnerCompaniesArray = new string[] { "Amway", "Bissell", "Emergent", "Faurecia", "Priority", "Steelcase", "Trinity", "Wakestream", "Whirlpool" };
                    foreach (string partnerCompany in partnerCompaniesArray)
                    {
                        if (Model.Alignments != null)
                        {
                            <input type="checkbox" name="PartnerCompany" value="@partnerCompany" checked="@Model.Alignments.Contains(@partnerCompany)" />@partnerCompany
                        }
                        else
                        {
                            <input type="checkbox" name="PartnerCompany" value="@partnerCompany"/>@partnerCompany
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @*Checkbox Inputs: Themes*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Themes)
            </td>
            <td>
                @{
                    string[] themesArray = new string[] { "The Good Life", "Health Beyond the Hospital", "Robust Future", "Convenience & Productivity" };
                    foreach (string theme in themesArray)
                    {
                        if (@Model.Themes != null)
                        {
                            <input type="checkbox" name="selectedThemes" value="@theme" checked="@Model.Themes.Contains(@theme)" />@theme
                        }
                        else
                        {
                            <input type="checkbox" name="selectedThemes" value="@theme" />@theme
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @*Checkbox Inputs: Landscapes*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Landscapes)
            </td>
            <td>
                @{
                    string[] landscapesArray = new string[] { "Aging in Place", "Air Quality", "Automation and Robotics", "Clinic in a Box", "Good Habits", "Personalized Wellness", "Responsive Spaces", "Safe Shared Spaces", "Wireless Power" };
                    foreach (string landscape in landscapesArray)
                    {
                        if (@Model.Landscapes != null)
                        {
                            <input type="checkbox" name="selectedLandscapes" value="@landscape" checked="@Model.Landscapes.Contains(@landscape)" />@landscape
                        }
                        else
                        {
                            <input type="checkbox" name="selectedLandscapes" value="@landscape" />@landscape
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @*Checkbox Inputs: TechnologyAreas*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.TechnologyAreas)
            </td>
            <td>
                @{
                    string[] technologyAreasArray = new string[] { "Advanced Materials", "Business Process", "Products", "Robotics", "Sensing", "Software / AI" };
                    foreach (string technologyArea in technologyAreasArray)
                    {
                        if (@Model.TechnologyAreas != null)
                        {
                            <input type="checkbox" name="selectedTechnologyAreas" value="@technologyArea" checked="@Model.TechnologyAreas.Contains(@technologyArea)" />@technologyArea
                        }
                        else
                        {
                            <input type="checkbox" name="selectedTechnologyAreas" value="@technologyArea"  />@technologyArea
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @* Uniqueness, Team Dropdown Options *@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Uniqueness)
            </td>
            <td>
                <select id="Uniqueness" name="Uniqueness">
                    @{
                        for (int i = 1; i <= 5; i++)
                        {
                            if (Model.Uniqueness == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Team)
            </td>
            <td>
                <select id="Team" name="Team">
                    @{
                        for (int i = 1; i <= 5; i++)
                        {
                            if (Model.Team == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }


                        }
                    }
                </select>
            </td>
        </tr>
        @*Buttons*@
        <tr>
            <td>
                <input type="reset" value="Reset" />
                <input type="submit" value="Submit" />
            </td>
        </tr>
    </table>
</form>