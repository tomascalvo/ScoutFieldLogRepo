@* Apply CSS with the <link> tag below: *@
<link href="styles.css" rel="stylesheet" />
@model StartUpCompanies
@if (ViewBag.Message != null)
{
    <p>@ViewBag.Message</p>
}
<h3>@Model.CompanyName</h3>
<form method="POST">
@if (Model.Image != null)
{
    <img src="@Model.Image" alt="Company Logo" width="500" />
}
@if (Model.Status == "Lead")
{
    ViewBag.Title = "Edit Lead";
    <h2>Edit Lead</h2>
}
else
{
    <h2>Edit Startup</h2>
}
    @* Hidden Inputs *@
    @Html.HiddenFor(model => model.Id)
    <section>
        <fieldset>
            <legend>
                Contact Information
            </legend>
            <p>
                <label for="CompanyName">@Html.DisplayNameFor(c => c.CompanyName)</label>
                <input type="text" id="CompanyName" name="CompanyName" placeholder="@Model.CompanyName" value="@Model.CompanyName" />
            </p>
            <p>
                <label for="CompanyWebsite">@Html.DisplayNameFor(c => c.CompanyWebsite)</label>
                <input type="text" id="CompanyWebsite" name="CompanyWebsite" placeholder="@Model.CompanyWebsite" />
            </p>
            <p>
                <label for="CompanyContactName">@Html.DisplayNameFor(c => c.CompanyContactName)</label>
                <input type="text" id="CompanyContactName" name="CompanyContactName" placeholder="@Model.CompanyContactName" value="@Model.CompanyContactName" />
            </p>
            <p>
                <label for="CompanyContactPhoneNumber">@Html.DisplayNameFor(c => c.CompanyContactPhoneNumber)</label>
                <input type="number" id="CompanyContactPhoneNumber" name="CompanyContactPhoneNumber" placeholder="@Model.CompanyContactPhoneNumber" value="@Model.CompanyContactPhoneNumber" />
            </p>
            <p>
                <label for="City">@Html.DisplayNameFor(c => c.City)</label>
                <input type="text" id="City" name="City" placeholder="@Model.City" value="@Model.City" />
            </p>
            <p>
                <label for="StateProvince">@Html.DisplayNameFor(c => c.StateProvince)</label>
                <input type="text" id="StateProvince" name="StateProvince" placeholder="@Model.StateProvince" value="@Model.StateProvince" />
            </p>
            <p>
                <label for="Country">@Html.DisplayNameFor(c => c.Country)</label>
                <input type="text" id="Country" name="Country" placeholder="@Model.Country" value="@Model.Country" />
            </p>
        </fieldset>
        <fieldset>
            <legend>
                About
            </legend>
            <p>
                <label for="TwoLineSummary">@Html.DisplayNameFor(c => c.TwoLineSummary)</label>
                <textarea rows=3 cols=50 name="TwoLineSummary" maxlength="250" , placeholder="@Model.TwoLineSummary" value="@Model.TwoLineSummary" wrap="hard">@Model.TwoLineSummary</textarea>
            </p>
            <p>
                <label for="Image">@Html.DisplayNameFor(c => c.Image)</label>
                <textarea rows=3 cols=50 name="Image" id="Image" maxlength=500, placeholder="@Model.Image" value="@Model.Image" wrap="hard">@Model.Image</textarea>
            </p>
            <p>
                <label for="Raise">@Html.DisplayNameFor(c => c.Raised)</label>
                <input type="text" id="Raised" name="Raised" placeholder="@Model.Raised" value="@Model.Raised" />
            </p>
        </fieldset>
        <fieldset>
            <legend>
                Origin
            </legend>
        <p>
            <label for="ScoutName">@Html.DisplayNameFor(c => c.ScoutName)</label>
            <input type="text" id="ScoutName" name="ScoutName" value="@Model.ScoutName" placeholder="@Model.ScoutName" />
        </p>
        <p>
            <label for="DateAssigned">@Html.DisplayNameFor(c => c.DateAssigned)</label>
            @if (@Model.DateAssigned != null)
            {
                <input type="text" id="DateAssigned" name="DateAssigned" placeholder='@Model.DateAssigned.Value.ToString("MM/dd/yyyy")' value='@Model.DateAssigned.Value.ToString("MM/dd/yyyy")' onfocus="(this.type='date')" onblur="(this.type='text')" />
            }
            else
            {
                <input type="date" id="DateAssigned" name="DateAssigned" />
            }
        </p>
        <p>
            <label for="DateReviwed">@Html.DisplayNameFor(c => c.DateReviewed)</label>
            @if (@Model.DateReviewed != null)
            {
                <input type="text" id="DateReviewed" name="DateReviewed" placeholder='@Model.DateReviewed.Value.ToString("MM/dd/yyyy")' value='@Model.DateReviewed.Value.ToString("MM/dd/yyyy")' onfocus="(this.type='date')" onblur="(this.type='text')" />
            }
            else
            {
                <input type="date" id="DateReviewed" name="DateReviewed" />
            }
        </p>
        </fieldset>
    </section>
    <section>
        <fieldset>
            <legend>
                @Html.DisplayNameFor(c => c.Status)
            </legend>
            <p>
                <input type="radio" id="Lead" name="Status" value="Lead" checked />
                <label for="Lead">Lead</label>
            </p>
            <p>
                <input type="radio" id="UnderConsideration" name="Status" value="UnderConsideration" />
                <label for="Startup">Under Consideration</label>
            </p>
            <p>
                <input type="radio" id="Reviewed" name="Status" value="Reviewed" />
                <label for="Reviewed">Reviewed</label>
            </p>
        </fieldset>
    </section>
    <section>
        <fieldset>
            <legend>
                @Html.DisplayNameFor(c => c.Alignments)
            </legend>
            <ul>
                @{
                    foreach (string partnerCompany in ViewBag.partners)
                    {
                        <li>
                            @{ 
                                if (Model.Alignments != null)
                                {
                                    <input type="checkbox" name="PartnerCompany" id="@partnerCompany" value="@partnerCompany" checked="@Model.Alignments.Contains(@partnerCompany)" />@partnerCompany
                                }
                                else
                                {
                                    <input type="checkbox" name="PartnerCompany" value="@partnerCompany" />@partnerCompany
                                }
                            }
                            <label for="@partnerCompany">@partnerCompany</label>
                        </li>
                    }
                }
            </ul>
        </fieldset>
        <


    </section>
        @*Checkbox Inputs: Themes*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Themes)
            </td>
            <td>
                @{
                    string[] themesArray = new string[] { "Convenience & Productivity", "The Good Life", "Health Beyond the Hospital", "Robust Future", };
                    foreach (string theme in themesArray)
                    {
                        if (@Model.Themes != null)
                        {
                            <input type="checkbox" name="selectedThemes" value="@theme" checked="@Model.Themes.Contains(@theme)" />@theme
                        }
                        else
                        {
                            <input type="checkbox" name="selectedThemes" value="@theme" />@theme
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @*Checkbox Inputs: Landscapes*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Landscapes)
            </td>
            <td>
                @{
                    string[] landscapesArray = new string[] { "Aging in Place", "Air Quality", "Automation & Robotics", "Clinic in a Box", "Good Habits", "Personalized Wellness", "Responsive Spaces", "Safe Shared Spaces", "Wireless Power" };
                    foreach (string landscape in landscapesArray)
                    {
                        if (@Model.Landscapes != null)
                        {
                            <input type="checkbox" name="selectedLandscapes" value="@landscape" checked="@Model.Landscapes.Contains(@landscape)" />@landscape
                        }
                        else
                        {
                            <input type="checkbox" name="selectedLandscapes" value="@landscape" />@landscape
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @*Checkbox Inputs: TechnologyAreas*@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.TechnologyAreas)
            </td>
            <td>
                @{
                    string[] technologyAreasArray = new string[] { "Advanced Materials", "Business Process", "Products", "Robotics", "Sensing", "Software & AI" };
                    foreach (string technologyArea in technologyAreasArray)
                    {
                        if (@Model.TechnologyAreas != null)
                        {
                            <input type="checkbox" name="selectedTechnologyAreas" value="@technologyArea" checked="@Model.TechnologyAreas.Contains(@technologyArea)" />@technologyArea
                        }
                        else
                        {
                            <input type="checkbox" name="selectedTechnologyAreas" value="@technologyArea" />@technologyArea
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @* Uniqueness, Team Dropdown Options *@
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Uniqueness)
            </td>
            <td>
                <select id="Uniqueness" name="Uniqueness">
                    @{
                        for (int i = 1; i <= 5; i++)
                        {
                            if (Model.Uniqueness == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(c => c.Team)
            </td>
            <td>
                <select id="Team" name="Team">
                    @{
                        for (int i = 1; i <= 5; i++)
                        {
                            if (Model.Team == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }


                        }
                    }
                </select>
            </td>
        </tr>
        @*Buttons*@
        <tr>
            <td>
                <input type="reset" value="Reset" />
                <input type="submit" value="Submit" />
            </td>
        </tr>
    </table>
</form>